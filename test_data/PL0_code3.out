<   d_const,       const>
<      u_id,         max>
<   lop_eql,           =>
<  u_number,         100>
<   ch_semi,           ;>
<     d_var,         var>
<      u_id,         arg>
<  ch_comma,           ,>
<      u_id,         ret>
<   ch_semi,           ;>
<    d_proc,   procedure>
<      u_id,     isprime>
<   ch_semi,           ;>
<     d_var,         var>
<      u_id,           i>
<   ch_semi,           ;>
<  cp_begin,       begin>
<      u_id,         ret>
<aop_assign,          :=>
<  u_number,           1>
<   ch_semi,           ;>
<      u_id,           i>
<aop_assign,          :=>
<  u_number,           2>
<   ch_semi,           ;>
<  cp_while,       while>
<      u_id,           i>
<   lop_lss,           <>
<      u_id,         arg>
<     cp_do,          do>
<  cp_begin,       begin>
<     cp_if,          if>
<      u_id,         arg>
< aop_slash,           />
<      u_id,           i>
< aop_times,           *>
<      u_id,           i>
<   lop_eql,           =>
<      u_id,         arg>
<   cp_then,        then>
<  cp_begin,       begin>
<      u_id,         ret>
<aop_assign,          :=>
<  u_number,           0>
<   ch_semi,           ;>
<      u_id,           i>
<aop_assign,          :=>
<      u_id,         arg>
<    cp_end,         end>
<   ch_semi,           ;>
<      u_id,           i>
<aop_assign,          :=>
<      u_id,           i>
<  aop_plus,           +>
<  u_number,           1>
<    cp_end,         end>
<    cp_end,         end>
<   ch_semi,           ;>
<    d_proc,   procedure>
<      u_id,      primes>
<   ch_semi,           ;>
<  cp_begin,       begin>
<      u_id,         arg>
<aop_assign,          :=>
<  u_number,           2>
<   ch_semi,           ;>
<  cp_while,       while>
<      u_id,         arg>
<   lop_lss,           <>
<      u_id,         max>
<     cp_do,          do>
<  cp_begin,       begin>
<   cp_call,        call>
<      u_id,     isprime>
<   ch_semi,           ;>
<     cp_if,          if>
<      u_id,         ret>
<   lop_eql,           =>
<  u_number,           1>
<   cp_then,        then>
<   f_write,       write>
< ch_lparen,           (>
<      u_id,         arg>
< ch_rparen,           )>
<   ch_semi,           ;>
<      u_id,         arg>
<aop_assign,          :=>
<      u_id,         arg>
<  aop_plus,           +>
<  u_number,           1>
<    cp_end,         end>
<    cp_end,         end>
<   ch_semi,           ;>
<   cp_call,        call>
<      u_id,      primes>
<  ch_perio,           .>